
#include "Alarm_manager.h"

void (*Alarm_Manager_ptr2Fun)();

void Alarm_Manager_init(){

	Alarm_Manager_ptr2Fun = State(Waiting);
	// DPRINTF("Initializing Alarm Manager...\n");
	// DPRINTF("...Alarm Manager Initialized Successfully !!\n\n");
}

Define_State(MonitorPressure){

	Alarm_Manager_State = MonitorPressure;

	if(pval < threshold1){

		stopAlarmBuzzer();
		AlarmIndicatorON(Green_On);
		Delay(GreenLedTimer);
		AlarmIndicatorOFF(Green_Off);
	}

	else if(pval > threshold2){

		startAlarmBuzzer();
		AlarmIndicatorON(Red_On);
		Delay(RedLedTimer);
		stopAlarmBuzzer();
		AlarmIndicatorOFF(Red_Off);
	}

	else if ( threshold1 <= pval <= threshold2) {

		AlarmIndicatorON(Yellow_On);
		Delay(YellowLedTimer);

		for (i = 0; i < YellowLedTimer; i++){
			startAlarmBuzzer();
			Delay(BuzzerBeep);
			stopAlarmBuzzer();
		}
		AlarmIndicatorOFF(Yellow_Off);
		Delay(1000);
	}
	Alarm_Manager_ptr2Fun = State(Waiting);
}

Define_State(Waiting){

	Alarm_Manager_State = WaitingPressure;

	Alarm_Manager_ptr2Fun = State(MonitorPressure);
	Alarm_Manager_ptr2Fun();
}

