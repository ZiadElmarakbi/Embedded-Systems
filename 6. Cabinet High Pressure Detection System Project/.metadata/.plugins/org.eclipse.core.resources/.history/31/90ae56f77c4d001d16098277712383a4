
#include "Flash_Memory_Driver.h"

Flash_Memory_Status Status;

fifo_flash flash;
fifo_flash* flashptr = &flash;
uint32_t flashArr[flashSpace];

enum {
	Storing,
	IDLE
}Flash_Memory_state;

void (*Flash_Memory_ptr2Fun)(uint32_t);

void Flash_Memory_init(fifo_flash* flashptr, uint32_t* flashArr, uint32_t Length){

	flashptr->Base = flashArr;
	flashptr->Head = flashArr;
	flashptr->Tail = flashArr;
	flashptr->Count = 0;
	flashptr->Length = Length;

	DPRINTF("Initializing Flash Memory...\n");
	DPRINTF("... Flash Memory Initialized Successfully !! ...\n\n");

	Flash_Memory_ptr2Fun = ST_IDLE;
}

void ST_Storing(uint32_t pval){

	Flash_Memory_state = Storing;
	Flash_Memory_Enqueue(flashptr, &pval);
	Flash_Memory_state = IDLE;
}

void ST_IDLE(uint32_t pval){

	Flash_Memory_state = IDLE;

	if(flashptr->Count != flashptr->Length){

		Flash_Memory_ptr2Fun = ST_Storing;
		Flash_Memory_ptr2Fun(pval);
	}

	else {Flash_Memory_ptr2Fun = ST_IDLE;}
}

Flash_Memory_Status Flash_Memory_Enqueue(fifo_flash* flashptr, uint32_t* pval){

	if(flashptr->Count == flashptr->Length){

		DPRINTF("Flash Memory is Full.\n");
		return Flash_Memory_Full;
	}

	else{

		*(flashptr->Head) = *(pval);
		flashptr->Count++;

		if(flashptr->Head == flashptr->Base + (flashptr->Length * sizeof(flashSpace))){
			flashptr->Base = flashptr->Head;
			DPRINTF("Warning!, Stored Data will be overwritten.\n");
		}

		else
			flashptr->Head++;

		DPRINTF("Storing Pressure Value: %u bars\n",*pval);
		return Flash_No_error;
	}
}

