/**
 ******************************************************************************
 * @file           : main.c
 * @author         : Auto-generated by STM32CubeIDE
 * @brief          : Main program body
 ******************************************************************************
 * @attention
 *
 * Copyright (c) 2022 STMicroelectronics.
 * All rights reserved.
 *
 * This software is licensed under terms that can be found in the LICENSE file
 * in the root directory of this software component.
 * If no LICENSE file comes with this software, it is provided AS-IS.
 *
 ******************************************************************************
 */

#include "stdio.h"
#include "stdlib.h"
#include "Typedefs.h" // Written Header file

#define RCC_Base 0x40021000 // Defining the base address of RCC Peripheral
#define GPIO_PABase 0x40010800 // Defining the base address of GPIO_Port A Peripheral

// Defining A Pointer Pointing to the offset (Address of the Register APB2ENR) in RCC
#define RCC_APB2ENR *(vuint32*)(RCC_Base + 0x18)

// Defining A Pointer Pointing to the offset (Address of the Register CRH) in Port A
#define GPIO_PA_CRH *(vuint32*)(GPIO_PABase + 0x04)

// Defining A Pointer Pointing to the offset (Address of the Register ODR) in Port A
#define GPIO_PA_ODR *(vuint32*)(GPIO_PABase + 0x0c)


typedef union {
	vuint32 AllPort;
	struct{

		vuint32 reserved:13;
		vuint32 Pin13:1;
	}Pins;
}PA_ODR;

volatile PA_ODR* ODR = (volatile PA_ODR*)(GPIO_PABase + 0x0c);

int main()
{
	RCC_APB2ENR = 1<<2; // Writing 00000010 on RCC Register Offset 0x18
	GPIO_PA_CRH &= 0xFF0FFFFF; // Keep the previous state of Register
	GPIO_PA_CRH |= 0x00200000;  // Writing 0010 from bits between 20 - 23

	while(1){

/* ODR is a Volatile pointer which is pointing to Struct
   data type Pins and then writing 1 on its member Pin13 */
		ODR->Pins.Pin13 = 1;
		for(int i = 0; i<5000; i++); // Delay
		ODR->Pins.Pin13 = 0;      // Writing 0 on Struct member Pin13 to toggle led
		for(i = 0; i<5000; i++); // Delay again

// Another Way By Using a Pointer to Union Pointing to the entire Register Instead of a single bit

		/*ODR->AllPort = 0x00001000;   // Writing 1 on pin 13
		for(int i = 0; i<5000; i++); // Delay
		ODR->AllPort = 0x00000000;   // Writing 0 on pin 13
		for(int i = 0; i<5000; i++); // Delay again*/

	}

}
